<beans   xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!-- 使用注解形式一定要配置，注解扫描
	可以扫描controller,service,...这里让扫描controller,指定controller的包 -->
	<context:component-scan base-package="cn.jx.pxc.ssm.controller"/>
	
	
	<!--多个映射器可以共存  -->
		
	<!--使用mvc:annotation-driven代替上边的注解映射器和适配器 配置
		mvc:annotation-driven:默认加载很多的参数绑定方法
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
		实际开发时，使用mvc:annotation-driven最多。
	 -->
	 <!--注解映射器和适配器 配置 
	 	conversion-service:可以配置自定义参数绑定（日期类型）
	 	自定义参数绑定：1.mvc:annotation-driven注入
	 	            2.编写bean（conversionService）
	 	            3.编写转换器中自定义类
	 	validator:springmvc校验器
	 	使用这个注解，不用配置json配置转换器默认支持
	 	使用fastjson:就要使用json配置
	  -->
	<mvc:annotation-driven conversion-service="conversionService"  validator="validator">
		  <!-- 配置Fastjson支持 -->
		<!-- <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters> -->

	</mvc:annotation-driven>
	
	
	<!--conversionService:自定义参数绑定  -->
	<bean id="conversionService" class=" org.springframework.context.support.ConversionServiceFactoryBean">
	
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<bean class="cn.jx.pxc.ssm.controller.converter.CustomDateConverter"></bean>
			</list>
		</property>
	</bean>
	
	<!--springmvc校验器  -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!--指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的validationMessages.properties  -->
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>

	<!--校验错误信息配置文件  -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource ">
		<!--资源文件名  -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 资源文件编码格式 -->
		<!-- <property name="fileEncodings" value="UTF-8"/> -->
		
		<!--对资源文件内容缓存实际单位秒  -->
		<property name="cacheSeconds" value="120"/>
	</bean>
	
	<!--全局异常处理器  
		只要实现HandlerExceptionResolver接口就是全局异常处理器
	-->
	<bean class="cn.jx.pxc.exception.CustomExceptionResolver"></bean>
	
	
	<!--springmvc中对多部件类型解析
		1.在页面form中enctype="multipart/form-data"
		2.在springmvc.xml中配置multipart解析器
	  -->
	  <!--文件上传  -->
	  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	  	<!--设置上传文件的最大尺寸为5MB  -->
	  	<property name="maxUploadSize">
	  		<value>5242880</value>
	  	</property>
	  </bean>
	  
	  <!--拦截器  
	  	1.多个拦截器，顺序执行
	  	2./**表示所有url包括子url路径，/*表示根url
	  	3.登陆拦截器
	  -->
	  <!-- <mvc:interceptors>
	  	<mvc:interceptor>
	  		<mvc:mapping path="/**"/>
	  		<bean class="cn.jx.pxc.ssm.interceptor.LoginInterceptor"/>
	  	</mvc:interceptor>
	  	
	  	<mvc:interceptor>
	  		<mvc:mapping path="/**"/>
	  		<bean class="cn.jx.pxc.ssm.interceptor.HandlerInterceptor1"/>
	  	</mvc:interceptor>
	  	
	  	<mvc:interceptor>
	  		<mvc:mapping path="/**"/>
	  		<bean class="cn.jx.pxc.ssm.interceptor.HandlerInterceptor2"/>
	  	</mvc:interceptor>
	  </mvc:interceptors> -->
	
	<!--配置视图解析器 解析jsp解析，默认使用jstl标签，classpath下得有jstl的jar.-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--默认加载jstl classpath下必须要jstl的jar,可以不用写 -->
		<!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
		<!--配置jsp的前缀  -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!--配置jsp的后缀  -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
</beans>